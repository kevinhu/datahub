{
  "type" : "record",
  "name" : "DashboardSnapshot",
  "namespace" : "com.linkedin.metadata.snapshot",
  "doc" : "A metadata snapshot for a specific Dashboard entity.",
  "fields" : [ {
    "name" : "urn",
    "type" : "string",
    "doc" : "URN for the entity the metadata snapshot is associated with.",
    "java" : {
      "class" : "com.linkedin.common.urn.DashboardUrn"
    }
  }, {
    "name" : "aspects",
    "type" : {
      "type" : "array",
      "items" : [ {
        "type" : "record",
        "name" : "DashboardKey",
        "namespace" : "com.linkedin.metadata.key",
        "doc" : "Key for a Dashboard",
        "fields" : [ {
          "name" : "dashboardTool",
          "type" : "string",
          "doc" : "The name of the dashboard tool such as looker, redash etc.",
          "Searchable" : {
            "boostScore" : 4.0,
            "fieldName" : "tool",
            "fieldType" : "TEXT_PARTIAL"
          }
        }, {
          "name" : "dashboardId",
          "type" : "string",
          "doc" : "Unique id for the dashboard. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, dashboard URL could be used here for Looker such as 'looker.linkedin.com/dashboards/1234'"
        } ],
        "Aspect" : {
          "name" : "dashboardKey"
        }
      }, {
        "type" : "record",
        "name" : "DashboardInfo",
        "namespace" : "com.linkedin.dashboard",
        "doc" : "Information about a dashboard",
        "fields" : [ {
          "name" : "customProperties",
          "type" : {
            "type" : "map",
            "values" : "string"
          },
          "doc" : "Custom property bag.",
          "default" : { },
          "Searchable" : {
            "/*" : {
              "queryByDefault" : true
            }
          }
        }, {
          "name" : "externalUrl",
          "type" : [ "null", "string" ],
          "doc" : "URL where the reference exist",
          "default" : null,
          "java" : {
            "class" : "com.linkedin.common.url.Url",
            "coercerClass" : "com.linkedin.common.url.UrlCoercer"
          }
        }, {
          "name" : "title",
          "type" : "string",
          "doc" : "Title of the dashboard",
          "Searchable" : {
            "boostScore" : 10.0,
            "enableAutocomplete" : true,
            "fieldType" : "TEXT_PARTIAL"
          }
        }, {
          "name" : "description",
          "type" : "string",
          "doc" : "Detailed description about the dashboard",
          "Searchable" : {
            "fieldType" : "TEXT",
            "hasValuesFieldName" : "hasDescription"
          }
        }, {
          "name" : "charts",
          "type" : {
            "type" : "array",
            "items" : "string"
          },
          "doc" : "Charts in a dashboard",
          "default" : [ ],
          "Relationship" : {
            "/*" : {
              "entityTypes" : [ "chart" ],
              "name" : "Contains"
            }
          }
        }, {
          "name" : "lastModified",
          "type" : {
            "type" : "record",
            "name" : "ChangeAuditStamps",
            "namespace" : "com.linkedin.common",
            "doc" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations",
            "fields" : [ {
              "name" : "created",
              "type" : {
                "type" : "record",
                "name" : "AuditStamp",
                "doc" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
                "fields" : [ {
                  "name" : "time",
                  "type" : "long",
                  "doc" : "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
                }, {
                  "name" : "actor",
                  "type" : "string",
                  "doc" : "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
                  "java" : {
                    "class" : "com.linkedin.common.urn.Urn"
                  }
                }, {
                  "name" : "impersonator",
                  "type" : [ "null", "string" ],
                  "doc" : "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
                  "default" : null,
                  "java" : {
                    "class" : "com.linkedin.common.urn.Urn"
                  }
                } ]
              },
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0
              }
            }, {
              "name" : "lastModified",
              "type" : "AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            } ]
          },
          "doc" : "Captures information about who created/last modified/deleted this dashboard and when"
        }, {
          "name" : "dashboardUrl",
          "type" : [ "null", "string" ],
          "doc" : "URL for the dashboard. This could be used as an external link on DataHub to allow users access/view the dashboard",
          "default" : null,
          "java" : {
            "class" : "com.linkedin.common.url.Url",
            "coercerClass" : "com.linkedin.common.url.UrlCoercer"
          }
        }, {
          "name" : "access",
          "type" : [ "null", {
            "type" : "enum",
            "name" : "AccessLevel",
            "namespace" : "com.linkedin.common",
            "doc" : "The various access levels",
            "symbols" : [ "PUBLIC", "PRIVATE" ],
            "symbolDocs" : {
              "PRIVATE" : "Private availability to certain set of users",
              "PUBLIC" : "Publicly available access level"
            }
          } ],
          "doc" : "Access level for the dashboard",
          "default" : null,
          "Searchable" : {
            "addToFilters" : true,
            "fieldType" : "KEYWORD",
            "filterNameOverride" : "Access Level"
          }
        }, {
          "name" : "lastRefreshed",
          "type" : [ "null", "long" ],
          "doc" : "The time when this dashboard last refreshed",
          "default" : null
        } ],
        "Aspect" : {
          "name" : "dashboardInfo"
        }
      }, {
        "type" : "record",
        "name" : "EditableDashboardProperties",
        "namespace" : "com.linkedin.dashboard",
        "doc" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
        "fields" : [ {
          "name" : "created",
          "type" : "com.linkedin.common.AuditStamp",
          "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
          "default" : {
            "actor" : "urn:li:corpuser:unknown",
            "impersonator" : null,
            "time" : 0
          }
        }, {
          "name" : "lastModified",
          "type" : "com.linkedin.common.AuditStamp",
          "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
          "default" : {
            "actor" : "urn:li:corpuser:unknown",
            "impersonator" : null,
            "time" : 0
          }
        }, {
          "name" : "deleted",
          "type" : [ "null", "com.linkedin.common.AuditStamp" ],
          "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
          "default" : null
        }, {
          "name" : "description",
          "type" : [ "null", "string" ],
          "doc" : "Edited documentation of the dashboard",
          "default" : null,
          "Searchable" : {
            "fieldName" : "editedDescription",
            "fieldType" : "TEXT"
          }
        } ],
        "Aspect" : {
          "name" : "editableDashboardProperties"
        }
      }, {
        "type" : "record",
        "name" : "Ownership",
        "namespace" : "com.linkedin.common",
        "doc" : "Ownership information of an entity.",
        "fields" : [ {
          "name" : "owners",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "Owner",
              "doc" : "Ownership information",
              "fields" : [ {
                "name" : "owner",
                "type" : "string",
                "doc" : "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)",
                "Relationship" : {
                  "entityTypes" : [ "corpUser", "corpGroup" ],
                  "name" : "OwnedBy"
                },
                "Searchable" : {
                  "fieldName" : "owners",
                  "fieldType" : "URN",
                  "hasValuesFieldName" : "hasOwners",
                  "queryByDefault" : false
                },
                "java" : {
                  "class" : "com.linkedin.common.urn.Urn"
                }
              }, {
                "name" : "type",
                "type" : {
                  "type" : "enum",
                  "name" : "OwnershipType",
                  "doc" : "Owner category or owner role",
                  "symbols" : [ "DEVELOPER", "DATAOWNER", "DELEGATE", "PRODUCER", "CONSUMER", "STAKEHOLDER" ],
                  "symbolDocs" : {
                    "CONSUMER" : "A person, group, or service that consumes the data",
                    "DATAOWNER" : "A person or group that is owning the data",
                    "DELEGATE" : "A person or a group that overseas the operation, e.g. a DBA or SRE.",
                    "DEVELOPER" : "A person or group that is in charge of developing the code",
                    "PRODUCER" : "A person, group, or service that produces/generates the data",
                    "STAKEHOLDER" : "A person or a group that has direct business interest"
                  }
                },
                "doc" : "The type of the ownership"
              }, {
                "name" : "source",
                "type" : [ "null", {
                  "type" : "record",
                  "name" : "OwnershipSource",
                  "doc" : "Source/provider of the ownership information",
                  "fields" : [ {
                    "name" : "type",
                    "type" : {
                      "type" : "enum",
                      "name" : "OwnershipSourceType",
                      "symbols" : [ "AUDIT", "DATABASE", "FILE_SYSTEM", "ISSUE_TRACKING_SYSTEM", "MANUAL", "SERVICE", "SOURCE_CONTROL", "OTHER" ],
                      "symbolDocs" : {
                        "AUDIT" : "Auditing system or audit logs",
                        "DATABASE" : "Database, e.g. GRANTS table",
                        "FILE_SYSTEM" : "File system, e.g. file/directory owner",
                        "ISSUE_TRACKING_SYSTEM" : "Issue tracking system, e.g. Jira",
                        "MANUAL" : "Manually provided by a user",
                        "OTHER" : "Other sources",
                        "SERVICE" : "Other ownership-like service, e.g. Nuage, ACL service etc",
                        "SOURCE_CONTROL" : "SCM system, e.g. GIT, SVN"
                      }
                    },
                    "doc" : "The type of the source"
                  }, {
                    "name" : "url",
                    "type" : [ "null", "string" ],
                    "doc" : "A reference URL for the source",
                    "default" : null
                  } ]
                } ],
                "doc" : "Source information for the ownership",
                "default" : null
              } ]
            }
          },
          "doc" : "List of owners of the entity."
        }, {
          "name" : "lastModified",
          "type" : "AuditStamp",
          "doc" : "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data.",
          "default" : {
            "actor" : "urn:li:corpuser:unknown",
            "impersonator" : null,
            "time" : 0
          }
        } ],
        "Aspect" : {
          "name" : "ownership"
        }
      }, {
        "type" : "record",
        "name" : "Status",
        "namespace" : "com.linkedin.common",
        "doc" : "The status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally.",
        "fields" : [ {
          "name" : "removed",
          "type" : "boolean",
          "doc" : "whether the entity is removed or not",
          "default" : false,
          "Searchable" : {
            "fieldType" : "BOOLEAN"
          }
        } ],
        "Aspect" : {
          "name" : "status"
        }
      }, {
        "type" : "record",
        "name" : "GlobalTags",
        "namespace" : "com.linkedin.common",
        "doc" : "Tag aspect used for applying tags to an entity",
        "fields" : [ {
          "name" : "tags",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "TagAssociation",
              "doc" : "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters.",
              "fields" : [ {
                "name" : "tag",
                "type" : "string",
                "doc" : "Urn of the applied tag",
                "Searchable" : {
                  "addToFilters" : true,
                  "fieldName" : "tags",
                  "fieldType" : "URN_PARTIAL",
                  "filterNameOverride" : "Tag",
                  "hasValuesFieldName" : "hasTags"
                },
                "java" : {
                  "class" : "com.linkedin.common.urn.TagUrn"
                }
              } ]
            }
          },
          "doc" : "Tags associated with a given entity"
        } ],
        "Aspect" : {
          "name" : "globalTags"
        }
      }, {
        "type" : "record",
        "name" : "BrowsePaths",
        "namespace" : "com.linkedin.common",
        "doc" : "Shared aspect containing Browse Paths to be indexed for an entity.",
        "fields" : [ {
          "name" : "paths",
          "type" : {
            "type" : "array",
            "items" : "string"
          },
          "doc" : "A list of valid browse paths for the entity.\n\nBrowse paths are expected to be backslash-separated strings. For example: 'prod/snowflake/datasetName'",
          "Searchable" : {
            "/*" : {
              "fieldName" : "browsePaths",
              "fieldType" : "BROWSE_PATH"
            }
          }
        } ],
        "Aspect" : {
          "name" : "browsePaths"
        }
      }, {
        "type" : "record",
        "name" : "GlossaryTerms",
        "namespace" : "com.linkedin.common",
        "doc" : "Related business terms information",
        "fields" : [ {
          "name" : "terms",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "GlossaryTermAssociation",
              "doc" : "Properties of an applied glossary term.",
              "fields" : [ {
                "name" : "urn",
                "type" : "string",
                "doc" : "Urn of the applied glossary term",
                "Searchable" : {
                  "addToFilters" : true,
                  "fieldName" : "glossaryTerms",
                  "fieldType" : "URN_PARTIAL",
                  "filterNameOverride" : "Glossary Term"
                },
                "java" : {
                  "class" : "com.linkedin.common.urn.GlossaryTermUrn"
                }
              } ]
            }
          },
          "doc" : "The related business terms"
        }, {
          "name" : "auditStamp",
          "type" : "AuditStamp",
          "doc" : "Audit stamp containing who reported the related business term"
        } ],
        "Aspect" : {
          "name" : "glossaryTerms"
        }
      }, {
        "type" : "record",
        "name" : "InstitutionalMemory",
        "namespace" : "com.linkedin.common",
        "doc" : "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity.",
        "fields" : [ {
          "name" : "elements",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "InstitutionalMemoryMetadata",
              "doc" : "Metadata corresponding to a record of institutional memory.",
              "fields" : [ {
                "name" : "url",
                "type" : "string",
                "doc" : "Link to an engineering design document or a wiki page.",
                "java" : {
                  "class" : "com.linkedin.common.url.Url",
                  "coercerClass" : "com.linkedin.common.url.UrlCoercer"
                }
              }, {
                "name" : "description",
                "type" : "string",
                "doc" : "Description of the link."
              }, {
                "name" : "createStamp",
                "type" : "AuditStamp",
                "doc" : "Audit stamp associated with creation of this record"
              } ]
            }
          },
          "doc" : "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."
        } ],
        "Aspect" : {
          "name" : "institutionalMemory"
        }
      }, {
        "type" : "record",
        "name" : "DataPlatformInstance",
        "namespace" : "com.linkedin.common",
        "doc" : "Tag aspect used for applying tags to an entity",
        "fields" : [ {
          "name" : "platform",
          "type" : "string",
          "doc" : "Data Platform",
          "Searchable" : {
            "addToFilters" : true,
            "fieldType" : "URN",
            "filterNameOverride" : "Platform"
          },
          "java" : {
            "class" : "com.linkedin.common.urn.Urn"
          }
        }, {
          "name" : "instance",
          "type" : [ "null", "string" ],
          "doc" : "Instance of the data platform (e.g. db instance)",
          "default" : null
        } ],
        "Aspect" : {
          "name" : "dataPlatformInstance"
        }
      } ]
    },
    "doc" : "The list of metadata aspects associated with the dashboard. Depending on the use case, this can either be all, or a selection, of supported aspects."
  } ],
  "Entity" : {
    "keyAspect" : "dashboardKey",
    "name" : "dashboard"
  }
}