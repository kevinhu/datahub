{
  "type" : "record",
  "name" : "MLPrimaryKeySnapshot",
  "namespace" : "com.linkedin.metadata.snapshot",
  "fields" : [ {
    "name" : "urn",
    "type" : "string",
    "doc" : "URN for the entity the metadata snapshot is associated with.",
    "java" : {
      "class" : "com.linkedin.common.urn.Urn"
    }
  }, {
    "name" : "aspects",
    "type" : {
      "type" : "array",
      "items" : [ {
        "type" : "record",
        "name" : "MLPrimaryKeyKey",
        "namespace" : "com.linkedin.metadata.key",
        "doc" : "Key for an MLPrimaryKey",
        "fields" : [ {
          "name" : "featureNamespace",
          "type" : "string",
          "doc" : "Namespace for the primary key",
          "Searchable" : {
            "fieldType" : "TEXT_PARTIAL"
          }
        }, {
          "name" : "name",
          "type" : "string",
          "doc" : "Name of the primary key",
          "Searchable" : {
            "boostScore" : 8.0,
            "enableAutocomplete" : true,
            "fieldType" : "TEXT_PARTIAL"
          }
        } ],
        "Aspect" : {
          "name" : "mlPrimaryKeyKey"
        }
      }, {
        "type" : "record",
        "name" : "MLPrimaryKeyProperties",
        "namespace" : "com.linkedin.ml.metadata",
        "doc" : "Properties associated with a MLPrimaryKey",
        "fields" : [ {
          "name" : "description",
          "type" : [ "null", "string" ],
          "doc" : "Documentation of the MLPrimaryKey",
          "default" : null
        }, {
          "name" : "dataType",
          "type" : [ "null", {
            "type" : "enum",
            "name" : "MLFeatureDataType",
            "namespace" : "com.linkedin.common",
            "doc" : "MLFeature Data Type",
            "symbols" : [ "USELESS", "NOMINAL", "ORDINAL", "BINARY", "COUNT", "TIME", "INTERVAL", "IMAGE", "VIDEO", "AUDIO", "TEXT", "MAP", "SEQUENCE", "SET", "CONTINUOUS", "BYTE", "UNKNOWN" ],
            "symbolDocs" : {
              "AUDIO" : "Audio Data",
              "BINARY" : "Binary data is discrete data that can be in only one of two categories — either yes or no, 1 or 0, off or on, etc",
              "BYTE" : "Bytes data are binary-encoded values that can represent complex objects.",
              "CONTINUOUS" : "Continuous data are made of uncountable values, often the result of a measurement such as height, weight, age etc.",
              "COUNT" : "Count data is discrete whole number data — no negative numbers here.\nCount data often has many small values, such as zero and one.",
              "IMAGE" : "Image Data",
              "INTERVAL" : "Interval data has equal spaces between the numbers and does not represent a temporal pattern.\nExamples include percentages, temperatures, and income.",
              "MAP" : "Mapping Data Type ex: dict, map",
              "NOMINAL" : "Nominal data is made of discrete values with no numerical relationship between the different categories — mean and median are meaningless.\nAnimal species is one example. For example, pig is not higher than bird and lower than fish.",
              "ORDINAL" : "Ordinal data are discrete integers that can be ranked or sorted.\nFor example, the distance between first and second may not be the same as the distance between second and third.",
              "SEQUENCE" : "Sequence Data Type ex: list, tuple, range",
              "SET" : "Set Data Type ex: set, frozenset",
              "TEXT" : "Text Data",
              "TIME" : "Time data is a cyclical, repeating continuous form of data.\nThe relevant time features can be any period— daily, weekly, monthly, annual, etc.",
              "UNKNOWN" : "Unknown data are data that we don't know the type for.",
              "USELESS" : "Useless data is unique, discrete data with no potential relationship with the outcome variable.\nA useless feature has high cardinality. An example would be bank account numbers that were generated randomly.",
              "VIDEO" : "Video Data"
            }
          } ],
          "doc" : "Data Type of the MLPrimaryKey",
          "default" : null
        }, {
          "name" : "version",
          "type" : [ "null", {
            "type" : "record",
            "name" : "VersionTag",
            "namespace" : "com.linkedin.common",
            "doc" : "A resource-defined string representing the resource state for the purpose of concurrency control",
            "fields" : [ {
              "name" : "versionTag",
              "type" : [ "null", "string" ],
              "default" : null
            } ]
          } ],
          "doc" : "Version of the MLPrimaryKey",
          "default" : null
        }, {
          "name" : "sources",
          "type" : {
            "type" : "array",
            "items" : "string"
          },
          "doc" : "Source of the MLPrimaryKey",
          "Relationship" : {
            "/*" : {
              "entityTypes" : [ "dataset" ],
              "name" : "DerivedFrom"
            }
          }
        } ],
        "Aspect" : {
          "name" : "mlPrimaryKeyProperties"
        }
      }, {
        "type" : "record",
        "name" : "Ownership",
        "namespace" : "com.linkedin.common",
        "doc" : "Ownership information of an entity.",
        "fields" : [ {
          "name" : "owners",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "Owner",
              "doc" : "Ownership information",
              "fields" : [ {
                "name" : "owner",
                "type" : "string",
                "doc" : "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)",
                "Relationship" : {
                  "entityTypes" : [ "corpUser", "corpGroup" ],
                  "name" : "OwnedBy"
                },
                "Searchable" : {
                  "fieldName" : "owners",
                  "fieldType" : "URN",
                  "hasValuesFieldName" : "hasOwners",
                  "queryByDefault" : false
                },
                "java" : {
                  "class" : "com.linkedin.common.urn.Urn"
                }
              }, {
                "name" : "type",
                "type" : {
                  "type" : "enum",
                  "name" : "OwnershipType",
                  "doc" : "Owner category or owner role",
                  "symbols" : [ "DEVELOPER", "DATAOWNER", "DELEGATE", "PRODUCER", "CONSUMER", "STAKEHOLDER" ],
                  "symbolDocs" : {
                    "CONSUMER" : "A person, group, or service that consumes the data",
                    "DATAOWNER" : "A person or group that is owning the data",
                    "DELEGATE" : "A person or a group that overseas the operation, e.g. a DBA or SRE.",
                    "DEVELOPER" : "A person or group that is in charge of developing the code",
                    "PRODUCER" : "A person, group, or service that produces/generates the data",
                    "STAKEHOLDER" : "A person or a group that has direct business interest"
                  }
                },
                "doc" : "The type of the ownership"
              }, {
                "name" : "source",
                "type" : [ "null", {
                  "type" : "record",
                  "name" : "OwnershipSource",
                  "doc" : "Source/provider of the ownership information",
                  "fields" : [ {
                    "name" : "type",
                    "type" : {
                      "type" : "enum",
                      "name" : "OwnershipSourceType",
                      "symbols" : [ "AUDIT", "DATABASE", "FILE_SYSTEM", "ISSUE_TRACKING_SYSTEM", "MANUAL", "SERVICE", "SOURCE_CONTROL", "OTHER" ],
                      "symbolDocs" : {
                        "AUDIT" : "Auditing system or audit logs",
                        "DATABASE" : "Database, e.g. GRANTS table",
                        "FILE_SYSTEM" : "File system, e.g. file/directory owner",
                        "ISSUE_TRACKING_SYSTEM" : "Issue tracking system, e.g. Jira",
                        "MANUAL" : "Manually provided by a user",
                        "OTHER" : "Other sources",
                        "SERVICE" : "Other ownership-like service, e.g. Nuage, ACL service etc",
                        "SOURCE_CONTROL" : "SCM system, e.g. GIT, SVN"
                      }
                    },
                    "doc" : "The type of the source"
                  }, {
                    "name" : "url",
                    "type" : [ "null", "string" ],
                    "doc" : "A reference URL for the source",
                    "default" : null
                  } ]
                } ],
                "doc" : "Source information for the ownership",
                "default" : null
              } ]
            }
          },
          "doc" : "List of owners of the entity."
        }, {
          "name" : "lastModified",
          "type" : {
            "type" : "record",
            "name" : "AuditStamp",
            "doc" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
            "fields" : [ {
              "name" : "time",
              "type" : "long",
              "doc" : "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
            }, {
              "name" : "actor",
              "type" : "string",
              "doc" : "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "impersonator",
              "type" : [ "null", "string" ],
              "doc" : "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            } ]
          },
          "doc" : "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data.",
          "default" : {
            "actor" : "urn:li:corpuser:unknown",
            "impersonator" : null,
            "time" : 0
          }
        } ],
        "Aspect" : {
          "name" : "ownership"
        }
      }, {
        "type" : "record",
        "name" : "InstitutionalMemory",
        "namespace" : "com.linkedin.common",
        "doc" : "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity.",
        "fields" : [ {
          "name" : "elements",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "InstitutionalMemoryMetadata",
              "doc" : "Metadata corresponding to a record of institutional memory.",
              "fields" : [ {
                "name" : "url",
                "type" : "string",
                "doc" : "Link to an engineering design document or a wiki page.",
                "java" : {
                  "class" : "com.linkedin.common.url.Url",
                  "coercerClass" : "com.linkedin.common.url.UrlCoercer"
                }
              }, {
                "name" : "description",
                "type" : "string",
                "doc" : "Description of the link."
              }, {
                "name" : "createStamp",
                "type" : "AuditStamp",
                "doc" : "Audit stamp associated with creation of this record"
              } ]
            }
          },
          "doc" : "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."
        } ],
        "Aspect" : {
          "name" : "institutionalMemory"
        }
      }, {
        "type" : "record",
        "name" : "Status",
        "namespace" : "com.linkedin.common",
        "doc" : "The status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally.",
        "fields" : [ {
          "name" : "removed",
          "type" : "boolean",
          "doc" : "whether the entity is removed or not",
          "default" : false,
          "Searchable" : {
            "fieldType" : "BOOLEAN"
          }
        } ],
        "Aspect" : {
          "name" : "status"
        }
      }, {
        "type" : "record",
        "name" : "Deprecation",
        "namespace" : "com.linkedin.common",
        "doc" : "Deprecation status of an entity",
        "fields" : [ {
          "name" : "deprecated",
          "type" : "boolean",
          "doc" : "Whether the entity is deprecated.",
          "Searchable" : {
            "fieldType" : "BOOLEAN",
            "weightsPerFieldValue" : {
              "true" : 0.5
            }
          }
        }, {
          "name" : "decommissionTime",
          "type" : [ "null", "long" ],
          "doc" : "The time user plan to decommission this entity.",
          "default" : null
        }, {
          "name" : "note",
          "type" : "string",
          "doc" : "Additional information about the entity deprecation plan, such as the wiki, doc, RB."
        }, {
          "name" : "actor",
          "type" : "string",
          "doc" : "The corpuser URN which will be credited for modifying this deprecation content.",
          "java" : {
            "class" : "com.linkedin.common.urn.CorpuserUrn"
          }
        } ],
        "Aspect" : {
          "name" : "deprecation"
        }
      }, {
        "type" : "record",
        "name" : "GlobalTags",
        "namespace" : "com.linkedin.common",
        "doc" : "Tag aspect used for applying tags to an entity",
        "fields" : [ {
          "name" : "tags",
          "type" : {
            "type" : "array",
            "items" : {
              "type" : "record",
              "name" : "TagAssociation",
              "doc" : "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters.",
              "fields" : [ {
                "name" : "tag",
                "type" : "string",
                "doc" : "Urn of the applied tag",
                "Searchable" : {
                  "addToFilters" : true,
                  "fieldName" : "tags",
                  "fieldType" : "URN_PARTIAL",
                  "filterNameOverride" : "Tag",
                  "hasValuesFieldName" : "hasTags"
                },
                "java" : {
                  "class" : "com.linkedin.common.urn.TagUrn"
                }
              } ]
            }
          },
          "doc" : "Tags associated with a given entity"
        } ],
        "Aspect" : {
          "name" : "globalTags"
        }
      }, {
        "type" : "record",
        "name" : "DataPlatformInstance",
        "namespace" : "com.linkedin.common",
        "doc" : "Tag aspect used for applying tags to an entity",
        "fields" : [ {
          "name" : "platform",
          "type" : "string",
          "doc" : "Data Platform",
          "Searchable" : {
            "addToFilters" : true,
            "fieldType" : "URN",
            "filterNameOverride" : "Platform"
          },
          "java" : {
            "class" : "com.linkedin.common.urn.Urn"
          }
        }, {
          "name" : "instance",
          "type" : [ "null", "string" ],
          "doc" : "Instance of the data platform (e.g. db instance)",
          "default" : null
        } ],
        "Aspect" : {
          "name" : "dataPlatformInstance"
        }
      } ]
    },
    "doc" : "The list of metadata aspects associated with the MLPrimaryKey. Depending on the use case, this can either be all, or a selection, of supported aspects."
  } ],
  "Entity" : {
    "keyAspect" : "mlPrimaryKeyKey",
    "name" : "mlPrimaryKey"
  }
}